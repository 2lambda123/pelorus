---

- hosts: localhost
  connection: local
  vars_files:
    - ../vars/mdt.yml
  tasks:
    - name: Get Gitea hostname
      command: >
        oc get routes -n {{ k8s_namespace }} gitea -o=json
      register: gitea_route_result
    - name: Set Facts
      set_fact:
        gitea_host: "{{ (gitea_route_result.stdout | from_json)['spec']['tls'] is defined | ternary('https','http')  }}://{{ (gitea_route_result.stdout | from_json).spec.host }}"
    - name: Verify Gitea Route Active
      uri:
        url: "{{ gitea_host }}"
      register: gitea_route_active
      until: gitea_route_active.status == 200
      delay: 10
      retries: 60
    - name: Create Gitea Admin
      shell: >
        oc rsh $(oc get pods -l=app=gitea -o jsonpath='{.items[0].metadata.name}') /bin/bash -c "USER=gitea /home/gitea/gitea admin create-user --name {{ gitea_admin_user }} --admin --password {{ gitea_admin_password }} --email {{ gitea_admin_email }} -c /home/gitea/conf/app.ini" 
      register: create_mdt_admin
      failed_when: create_mdt_admin.rc !=0 and ('user already exists' not in create_mdt_admin.stderr)
    - name: Check if Organization Exists
      uri:
        url: "{{ gitea_host }}/api/v1/orgs/{{ gitea_org_name }}"
        method: GET
        user: "{{ gitea_org_name }}"
        password: "{{ gitea_admin_password }}"
        force_basic_auth: yes
        status_code:
          - 200
          - 404
      register: org_result
    - name: Create Organization
      uri:
        url: "{{ gitea_host }}/api/v1/admin/users/{{ gitea_admin_user }}/orgs"
        method: POST
        body_format: json
        user: "{{ gitea_admin_user }}"
        force_basic_auth: yes
        password: "{{ gitea_admin_password }}"
        headers:
          Content-Type: "application/json"
        body:
          username: "{{ gitea_org_name }}"
        status_code:
          - 201
      register: org_result
      when: org_result.status != 200
    - name: Check if Repository Exists
      uri:
        url: "{{ gitea_host }}/api/v1/repos/{{ gitea_org_name }}/{{ gitea_sample_repository_name }}"
        method: GET
        user: "{{ gitea_org_name }}"
        password: "{{ gitea_admin_password }}"
        force_basic_auth: yes
        status_code:
          - 200
          - 404
      register: repo_result
    - name: Migrate Repository
      uri:
        url: "{{ gitea_host }}/api/v1/repos/migrate"
        method: POST
        body_format: json
        user: "{{ gitea_admin_user }}"
        force_basic_auth: yes
        password: "{{ gitea_admin_password }}"
        headers:
          Content-Type: "application/json"
        body:
          uid: "{{ org_result.json.id | int }}"
          clone_addr: "{{ gitea_sample_repository_url }}"
          repo_name: "{{ gitea_sample_repository_name }}"
        status_code:
          - 201
      register: repo_result
      when: repo_result.status != 200
    - name: Create Temporary Directory
      file:
        state: directory
        path: "{{ playbook_dir }}/../{{ temp_directory_name }}"
    - name: Populate Repo File for later reference
      copy:
        dest: "{{ playbook_dir }}/../{{ temp_directory_name }}/{{ gitea_repo_file }}"
        content: "{{ gitea_host }}/{{ gitea_org_name }}/{{ gitea_sample_repository_name }}"



      